
# moving some files to master to run our playbook

- hosts: "{{ cluster_name }}_registry"

  become: true

  pre_tasks:

    - name: creating cluster cfg directory
      file:
        path: cfg/{{ cluster_name }}
        state: directory
      delegate_to: 127.0.0.1
      become: false
    
    - set_fact:
        registry_hostname: "{{ inventory_hostname }}"

    - name: Save registry_hostname
      shell: "echo registry_hostname{{ ':' }} {{ registry_hostname }} > cfg/{{ cluster_name }}/registry_hostname.yml"
      delegate_to: 127.0.0.1
      become: false

    - name: Save registry_user
      shell: "echo registry_user{{ ':' }} {{ registry_user }} > cfg/{{ cluster_name }}/registry_user.yml"
      delegate_to: 127.0.0.1
      become: false

    - name: Save registry_password
      shell: "echo registry_password{{ ':' }} {{ registry_password }} > cfg/{{ cluster_name }}/registry_password.yml"
      delegate_to: 127.0.0.1
      become: false
 
  tasks:

    - name: Pull facts on hypervisor
      action: setup

    - name: Install epel-release repo
      yum: name=epel-release state=present

    - name: Install some other packages
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - httpd
        - httpd-tools
        - python-pip
        - libselinux-python

    - name: Install python libraries
      shell: "{{ item }}"
      with_items:
        - 'pip install passlib' 
        - 'pip install docker-compose==1.9.0'

    - selinux:
        state: disabled

    - name: setenforce 0
      command: setenforce 0 

    - name: install docker composer
      shell: "{{ item }}"
      with_items:
        - "curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose"
        - 'chmod +x /usr/local/bin/docker-compose'

# installing registry

- hosts: "{{ cluster_name }}_registry"

  become: true

  roles:

    - role: registry_create
      tags:
        - registry

# testing registry

- hosts: "{{ cluster_name }}_registry"

  become: true

  tasks:

    - name: docker-composer
      docker_service:
        project_src: /root/docker-registry
        state: absent

    - name: docker-composer
      docker_service:
        project_src: /root/docker-registry
        state: present

- hosts: "{{ cluster_name }}_node"

  become: true

  tasks:

    - name: Read registry_hostname from file
      include_vars: cfg/{{ cluster_name }}/registry_hostname.yml

    - name: trying access to registry
      shell: curl -k https://p1nrojas:p1nrojas@docker.sdn40r8.lab/v2/
      register: curl_test

    - debug:
        var: curl_test.stdout
